version: 2
jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Test
          command: npm test
  release:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Build
          command: npm run build
      - run:
          name: Release to GitHub
          command: npm run release-to-github
      - run:
          name: Publish on npm
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access=public
  demo:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Build demo
          command: npm run build-demo
      - run:
          name: Deploy demo
          command: |
            git config --global user.email "circleci@transferwise.com"
            git config --global user.name "CircleCI"
            npm run deploy-demo

workflows:
  version: 2
  build-test-release-and-build-demo:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - test:
          requires:
            - build
      - release:
          requires:
            - test
          filters:
            branches:
              only: master
      - demo:
          requires:
            - test
          filters:
            branches:
              only: master